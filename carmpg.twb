<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0818.2120                               -->
<workbook source-build='2019.2.3 (20192.19.0818.2120)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='mpgdatavis' path='/workbooks' revision='2.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='car_mpg_data' inline='true' name='federated.0h16xhh1qi7ciy1aaiifi0x01gz8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='car_mpg_data' name='textscan.0xtaubw1pr5ykr1f6ie4q1ivsa57'>
            <connection class='textscan' directory='/Users/ethanfuerst/Documents/Coding/mpgdata' filename='car_mpg_data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='right' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[clean_c_data.csv].[date]' />
              <expression op='[weather_data.csv].[date]' />
            </expression>
          </clause>
          <relation connection='textscan.0xtaubw1pr5ykr1f6ie4q1ivsa57' name='clean_c_data.csv' table='[clean_c_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='real' name='miles' ordinal='1' />
              <column datatype='real' name='dollars' ordinal='2' />
              <column datatype='real' name='gallons' ordinal='3' />
              <column datatype='date' name='date' ordinal='4' />
              <column datatype='real' name='gal_cost' ordinal='5' />
              <column datatype='real' name='mpg' ordinal='6' />
              <column datatype='real' name='tank%_used' ordinal='7' />
              <column datatype='string' name='day' ordinal='8' />
              <column datatype='real' name='days_since_last_fillup' ordinal='9' />
              <column datatype='string' name='id' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.0xtaubw1pr5ykr1f6ie4q1ivsa57' name='weather_data.csv' table='[weather_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='real' name='daily_high' ordinal='2' />
              <column datatype='real' name='daily_low' ordinal='3' />
              <column datatype='real' name='high_mov_avg' ordinal='4' />
              <column datatype='real' name='low_mov_avg' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[F1 (weather_data.csv)]' value='[weather_data.csv].[F1]' />
          <map key='[F1]' value='[clean_c_data.csv].[F1]' />
          <map key='[daily_high]' value='[weather_data.csv].[daily_high]' />
          <map key='[daily_low]' value='[weather_data.csv].[daily_low]' />
          <map key='[date (weather_data.csv)]' value='[weather_data.csv].[date]' />
          <map key='[date]' value='[clean_c_data.csv].[date]' />
          <map key='[day]' value='[clean_c_data.csv].[day]' />
          <map key='[days_since_last_fillup]' value='[clean_c_data.csv].[days_since_last_fillup]' />
          <map key='[dollars]' value='[clean_c_data.csv].[dollars]' />
          <map key='[gal_cost]' value='[clean_c_data.csv].[gal_cost]' />
          <map key='[gallons]' value='[clean_c_data.csv].[gallons]' />
          <map key='[high_mov_avg]' value='[weather_data.csv].[high_mov_avg]' />
          <map key='[id]' value='[clean_c_data.csv].[id]' />
          <map key='[low_mov_avg]' value='[weather_data.csv].[low_mov_avg]' />
          <map key='[miles]' value='[clean_c_data.csv].[miles]' />
          <map key='[mpg]' value='[clean_c_data.csv].[mpg]' />
          <map key='[tank%_used]' value='[clean_c_data.csv].[tank%_used]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[clean_c_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[clean_c_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>miles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[miles]</local-name>
            <parent-name>[clean_c_data.csv]</parent-name>
            <remote-alias>miles</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dollars</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dollars]</local-name>
            <parent-name>[clean_c_data.csv]</parent-name>
            <remote-alias>dollars</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gallons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gallons]</local-name>
            <parent-name>[clean_c_data.csv]</parent-name>
            <remote-alias>gallons</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[clean_c_data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gal_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gal_cost]</local-name>
            <parent-name>[clean_c_data.csv]</parent-name>
            <remote-alias>gal_cost</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mpg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mpg]</local-name>
            <parent-name>[clean_c_data.csv]</parent-name>
            <remote-alias>mpg</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tank%_used</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tank%_used]</local-name>
            <parent-name>[clean_c_data.csv]</parent-name>
            <remote-alias>tank%_used</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>129</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[clean_c_data.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_since_last_fillup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[days_since_last_fillup]</local-name>
            <parent-name>[clean_c_data.csv]</parent-name>
            <remote-alias>days_since_last_fillup</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[clean_c_data.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[weather_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (weather_data.csv)]</local-name>
            <parent-name>[weather_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date (weather_data.csv)]</local-name>
            <parent-name>[weather_data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_high</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_high]</local-name>
            <parent-name>[weather_data.csv]</parent-name>
            <remote-alias>daily_high</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_low]</local-name>
            <parent-name>[weather_data.csv]</parent-name>
            <remote-alias>daily_low</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>high_mov_avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[high_mov_avg]</local-name>
            <parent-name>[weather_data.csv]</parent-name>
            <remote-alias>high_mov_avg</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>low_mov_avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[low_mov_avg]</local-name>
            <parent-name>[weather_data.csv]</parent-name>
            <remote-alias>low_mov_avg</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='dollars per month' datatype='real' name='[Calculation_46865614145683457]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([dollars]) / Sum([Number of Records])' />
      </column>
      <column caption='F1 (weather data.csv)' datatype='integer' name='[F1 (weather_data.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Daily High' datatype='real' name='[daily_high]' role='measure' type='quantitative' />
      <column caption='Daily Low' datatype='real' name='[daily_low]' role='measure' type='quantitative' />
      <column caption='Date (Weather Data.Csv)' datatype='date' name='[date (weather_data.csv)]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
      <column caption='Days Since Last Fillup' datatype='real' name='[days_since_last_fillup]' role='measure' type='quantitative' />
      <column caption='Dollars' datatype='real' name='[dollars]' role='measure' type='quantitative' />
      <column caption='Gal Cost' datatype='real' name='[gal_cost]' role='measure' type='quantitative' />
      <column caption='Gallons' datatype='real' name='[gallons]' role='measure' type='quantitative' />
      <column caption='High Mov Avg' datatype='real' name='[high_mov_avg]' role='measure' type='quantitative' />
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
      <column caption='Low Mov Avg' datatype='real' name='[low_mov_avg]' role='measure' type='quantitative' />
      <column caption='Miles' datatype='real' name='[miles]' role='measure' type='quantitative' />
      <column caption='Mpg' datatype='real' name='[mpg]' role='measure' type='quantitative' />
      <column caption='Tank% Used' datatype='real' name='[tank%_used]' role='measure' type='quantitative' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[daily_high]' derivation='None' name='[none:daily_high:qk]' pivot='key' type='quantitative' />
      <column-instance column='[daily_low]' derivation='None' name='[none:daily_low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[day]' derivation='None' name='[none:day:nk]' pivot='key' type='nominal' />
      <column-instance column='[high_mov_avg]' derivation='None' name='[none:high_mov_avg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[low_mov_avg]' derivation='None' name='[none:low_mov_avg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Quarter' name='[qr:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[daily_high]' derivation='Sum' name='[sum:daily_high:qk]' pivot='key' type='quantitative' />
      <column-instance column='[daily_low]' derivation='Sum' name='[sum:daily_low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[high_mov_avg]' derivation='Sum' name='[sum:high_mov_avg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[low_mov_avg]' derivation='Sum' name='[sum:low_mov_avg:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Day)' hidden='true' name='[Action (Day)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[day]' />
        </groupfilter>
      </group>
      <group caption='Action (Day,Vehicle)' hidden='true' name='[Action (Day,Vehicle)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[day]' />
          <groupfilter function='level-members' level='[vehicle]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date))' hidden='true' name='[Action (MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Date),MONTH(Date),Vehicle)' hidden='true' name='[Action (QUARTER(Date),MONTH(Date),Vehicle)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:date:ok]' />
          <groupfilter function='level-members' level='[mn:date:ok]' />
          <groupfilter function='level-members' level='[vehicle]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (MONTH(Date),QUARTER(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:date:ok]' />
          <groupfilter function='level-members' level='[qr:date:ok]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/ethanfuerst/Documents/My Tableau Repository/Datasources/car_mpg_data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/13/2019 11:32:24 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[F1 (weather_data.csv)]' value='[Extract].[F1]' />
            <map key='[F1]' value='[Extract].[F11]' />
            <map key='[daily_high]' value='[Extract].[daily_high]' />
            <map key='[daily_low]' value='[Extract].[daily_low]' />
            <map key='[date (weather_data.csv)]' value='[Extract].[date]' />
            <map key='[date]' value='[Extract].[date1]' />
            <map key='[day]' value='[Extract].[day]' />
            <map key='[days_since_last_fillup]' value='[Extract].[days_since_last_fillup]' />
            <map key='[dollars]' value='[Extract].[dollars]' />
            <map key='[gal_cost]' value='[Extract].[gal_cost]' />
            <map key='[gallons]' value='[Extract].[gallons]' />
            <map key='[high_mov_avg]' value='[Extract].[high_mov_avg]' />
            <map key='[id]' value='[Extract].[id]' />
            <map key='[low_mov_avg]' value='[Extract].[low_mov_avg]' />
            <map key='[miles]' value='[Extract].[miles]' />
            <map key='[mpg]' value='[Extract].[mpg]' />
            <map key='[tank%_used]' value='[Extract].[tank%_used]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='car_mpg_data' increment-value='%null%' refresh-type='create' rows-inserted='257' timestamp-start='2019-09-13 23:32:24.183' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F11</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F11</remote-alias>
              <ordinal>0</ordinal>
              <family>clean_c_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>miles</remote-name>
              <remote-type>5</remote-type>
              <local-name>[miles]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>miles</remote-alias>
              <ordinal>1</ordinal>
              <family>clean_c_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dollars</remote-name>
              <remote-type>5</remote-type>
              <local-name>[dollars]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dollars</remote-alias>
              <ordinal>2</ordinal>
              <family>clean_c_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gallons</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gallons]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gallons</remote-alias>
              <ordinal>3</ordinal>
              <family>clean_c_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date1</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date1</remote-alias>
              <ordinal>4</ordinal>
              <family>clean_c_data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gal_cost</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gal_cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gal_cost</remote-alias>
              <ordinal>5</ordinal>
              <family>clean_c_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mpg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mpg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mpg</remote-alias>
              <ordinal>6</ordinal>
              <family>clean_c_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tank%_used</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tank%_used]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tank%_used</remote-alias>
              <ordinal>7</ordinal>
              <family>clean_c_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>day</remote-name>
              <remote-type>129</remote-type>
              <local-name>[day]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>day</remote-alias>
              <ordinal>8</ordinal>
              <family>clean_c_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>days_since_last_fillup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[days_since_last_fillup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>days_since_last_fillup</remote-alias>
              <ordinal>9</ordinal>
              <family>clean_c_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>10</ordinal>
              <family>clean_c_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1 (weather_data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>11</ordinal>
              <family>weather_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>257</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date (weather_data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>12</ordinal>
              <family>weather_data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>257</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>daily_high</remote-name>
              <remote-type>5</remote-type>
              <local-name>[daily_high]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>daily_high</remote-alias>
              <ordinal>13</ordinal>
              <family>weather_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>252</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>daily_low</remote-name>
              <remote-type>5</remote-type>
              <local-name>[daily_low]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>daily_low</remote-alias>
              <ordinal>14</ordinal>
              <family>weather_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>252</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>high_mov_avg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[high_mov_avg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>high_mov_avg</remote-alias>
              <ordinal>15</ordinal>
              <family>weather_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>low_mov_avg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[low_mov_avg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>low_mov_avg</remote-alias>
              <ordinal>16</ordinal>
              <family>weather_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.243056' group-percentage='0.130208' measure-ordering='alphabetic' measure-percentage='0.626736' rowDisplayCount='43' show-aliased-fields='true' show-hidden-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:daily_high:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:daily_high:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:low_mov_avg:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:low_mov_avg:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:high_mov_avg:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:high_mov_avg:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0h16xhh1qi7ciy1aaiifi0x01gz8]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:daily_low:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:daily_low:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:date:ok]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1ba3c6'>
              <bucket>1</bucket>
            </map>
            <map to='#25b392'>
              <bucket>2</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>8</bucket>
            </map>
            <map to='#78ab30'>
              <bucket>3</bucket>
            </map>
            <map to='#c26abf'>
              <bucket>7</bucket>
            </map>
            <map to='#e23b25'>
              <bucket>5</bucket>
            </map>
            <map to='#f8b11f'>
              <bucket>4</bucket>
            </map>
            <map to='#f9608b'>
              <bucket>6</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:day:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1ba3c6'>
              <bucket>&quot;Sunday&quot;</bucket>
            </map>
            <map to='#1fae81'>
              <bucket>&quot;Monday&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Saturday&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tuesday&quot;</bucket>
            </map>
            <map to='#d669be'>
              <bucket>&quot;Friday&quot;</bucket>
            </map>
            <map to='#f43c63'>
              <bucket>&quot;Thursday&quot;</bucket>
            </map>
            <map to='#f88113'>
              <bucket>&quot;Wednesday&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Cost of Fillups by Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>Cost of a fillup by month</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='car_mpg_data' name='federated.0h16xhh1qi7ciy1aaiifi0x01gz8' />
          </datasources>
          <datasource-dependencies datasource='federated.0h16xhh1qi7ciy1aaiifi0x01gz8'>
            <column caption='dollars per month' datatype='real' name='[Calculation_46865614145683457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([dollars]) / Sum([Number of Records])' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Dollars' datatype='real' name='[dollars]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dollars]' derivation='Sum' name='[sum:dollars:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_46865614145683457]' derivation='User' name='[usr:Calculation_46865614145683457:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:date:ok]' />
              <groupfilter function='member' level='[mn:date:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:dollars:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[usr:Calculation_46865614145683457:ok]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:ok]' value='true' />
            <format attr='text-format' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:Number of Records:qk]' value='N' />
            <format attr='text-format' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:dollars:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#666666' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:ok]' />
              <tooltip column='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:Number of Records:qk]' />
              <tooltip column='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[usr:Calculation_46865614145683457:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>In &lt;</run>
                <run bold='true'>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:ok]</run>
                <run bold='true'>&gt;, I have spent a total of &lt;</run>
                <run bold='true'>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:dollars:qk]</run>
                <run bold='true'>&gt; filling up my car &lt;</run>
                <run bold='true'>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:Number of Records:qk]</run>
                <run bold='true'>&gt; times for an average of &lt;</run>
                <run bold='true'>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[usr:Calculation_46865614145683457:ok]</run>
                <run bold='true'>&gt; each fillup</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:dollars:qk]' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:dollars:qk]</rows>
        <cols>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:ok]</cols>
      </table>
      <simple-id uuid='{4AB2D931-512B-4503-88E6-B57CE9A158BD}' />
    </worksheet>
    <worksheet name='Gas Cost by Day'>
      <table>
        <view>
          <datasources>
            <datasource caption='car_mpg_data' name='federated.0h16xhh1qi7ciy1aaiifi0x01gz8' />
          </datasources>
          <datasource-dependencies datasource='federated.0h16xhh1qi7ciy1aaiifi0x01gz8'>
            <column-instance column='[dollars]' derivation='Avg' name='[avg:dollars:qk]' pivot='key' type='quantitative' />
            <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
            <column caption='Dollars' datatype='real' name='[dollars]' role='measure' type='quantitative' />
            <column-instance column='[day]' derivation='None' name='[none:day:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:day:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:day:nk]' />
              <groupfilter function='member' level='[none:day:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:day:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:day:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[avg:dollars:qk]</rows>
        <cols>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:day:nk]</cols>
      </table>
      <simple-id uuid='{DB89F9A2-37BB-4A4F-98E7-4C40AEE9D2FE}' />
    </worksheet>
    <worksheet name='Gas Cost by Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='car_mpg_data' name='federated.0h16xhh1qi7ciy1aaiifi0x01gz8' />
          </datasources>
          <datasource-dependencies datasource='federated.0h16xhh1qi7ciy1aaiifi0x01gz8'>
            <column-instance column='[gal_cost]' derivation='Avg' name='[avg:gal_cost:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Gal Cost' datatype='real' name='[gal_cost]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[avg:gal_cost:qk]' field-type='quantitative' min='1.2' range-type='fixedmin' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[avg:gal_cost:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:qk]' field-type='quantitative' max='9' min='1' range-type='fixed' scope='cols' type='space' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[avg:gal_cost:qk]' value='#666666' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[avg:gal_cost:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
            <format attr='text-format' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:qk]' value='iLLL' />
            <format attr='color' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[avg:gal_cost:qk]' value='#ffffff' />
            <format attr='color' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#666666' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#b4b4b4' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern-only' scope='cols' value='dashed' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#666666' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline degree='3' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='polynomial' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#000000'>In &lt;</run>
                <run bold='true' fontcolor='#000000'>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:qk]</run>
                <run bold='true' fontcolor='#000000'>&gt;, gas costs &lt;</run>
                <run bold='true' fontcolor='#000000'>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[avg:gal_cost:qk]</run>
                <run bold='true' fontcolor='#000000'>&gt; per gallon on average</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#66ffff' />
                <format attr='mark-markers-mode' value='none' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='1' />
                <format attr='stroke-color' value='#ecd71b' />
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='dashed' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[avg:gal_cost:qk]</rows>
        <cols>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:qk]</cols>
      </table>
      <simple-id uuid='{329BB37B-8A9B-4614-91A2-D25CD5EE7E9B}' />
    </worksheet>
    <worksheet name='High/Low temp'>
      <table>
        <view>
          <datasources>
            <datasource caption='car_mpg_data' name='federated.0h16xhh1qi7ciy1aaiifi0x01gz8' />
          </datasources>
          <datasource-dependencies datasource='federated.0h16xhh1qi7ciy1aaiifi0x01gz8'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[yr:date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='member' level='[yr:date:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[yr:date:ok] / ([federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:ok] / [federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[dy:date:ok]))</cols>
      </table>
      <simple-id uuid='{9F4BE172-3862-46E5-98A1-CAB28A781348}' />
    </worksheet>
    <worksheet name='MPG Moving Average'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='car_mpg_data' name='federated.0h16xhh1qi7ciy1aaiifi0x01gz8' />
          </datasources>
          <datasource-dependencies datasource='federated.0h16xhh1qi7ciy1aaiifi0x01gz8'>
            <column-instance column='[mpg]' derivation='Attribute' name='[attr:mpg:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Mpg' datatype='real' name='[mpg]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mpg]' derivation='Avg' name='[win:avg:mpg:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[win:avg:mpg:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[win:avg:mpg:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[win:avg:mpg:qk]' field-type='quantitative' min='18.0' range-type='fixedmin' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[win:avg:mpg:qk]' scope='rows' value='Miles per gallon' />
            <format attr='title' class='0' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:date:qk]' field-type='quantitative' min='#2019-01-01#' range-type='fixedmin' scope='cols' type='space' />
            <format attr='width' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[win:avg:mpg:qk]' value='56' />
            <format attr='tick-color' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[win:avg:mpg:qk]' value='#ffffff' />
            <format attr='tick-color' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:date:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[win:avg:mpg:qk]' value='#ffffff' />
            <format attr='border-width' scope='rows' value='1' />
            <format attr='border-style' scope='rows' value='solid' />
            <format attr='color' data-class='subtotal' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[win:avg:mpg:qk]' value='0' />
            <format attr='text-format' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:date:qk]' value='' />
            <format attr='color' scope='rows' value='#ffffff' />
            <format attr='color' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:date:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#666666' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='color' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[win:avg:mpg:qk]' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <tooltip column='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[attr:mpg:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#000000'>On &lt;[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:date:qk]&gt;, I filled up my car with gas.</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#000000'>In the time since I had last filled up, I got &lt;[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[attr:mpg:qk]&gt; miles per gallon.</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#000000'>The moving average at this point (n=3) is &lt;[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[win:avg:mpg:qk]&gt;.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#66ffff' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='dotted' />
                <format attr='stroke-size' value='3' />
                <format attr='stroke-color' value='#ecd71b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[win:avg:mpg:qk]</rows>
        <cols>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{13E8F611-E272-4C08-8C38-ECD3BA4E2C31}' />
    </worksheet>
    <worksheet name='Miles vs. Gallons'>
      <table>
        <view>
          <datasources>
            <datasource caption='car_mpg_data' name='federated.0h16xhh1qi7ciy1aaiifi0x01gz8' />
          </datasources>
          <datasource-dependencies datasource='federated.0h16xhh1qi7ciy1aaiifi0x01gz8'>
            <column caption='Gallons' datatype='real' name='[gallons]' role='measure' type='quantitative' />
            <column caption='Miles' datatype='real' name='[miles]' role='measure' type='quantitative' />
            <column-instance column='[gallons]' derivation='None' name='[none:gallons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[miles]' derivation='None' name='[none:miles:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:gallons:qk]' field-type='quantitative' max='13.0' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='asterisk' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:miles:qk]</rows>
        <cols>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:gallons:qk]</cols>
      </table>
      <simple-id uuid='{49AE1921-31AA-4127-ADFD-65DBC2B79B40}' />
    </worksheet>
    <worksheet name='Number of Fillups by Day'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>Number of times I have filled up my car by weekday</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='car_mpg_data' name='federated.0h16xhh1qi7ciy1aaiifi0x01gz8' />
          </datasources>
          <datasource-dependencies datasource='federated.0h16xhh1qi7ciy1aaiifi0x01gz8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
            <column-instance column='[day]' derivation='None' name='[none:day:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:day:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:day:nk]' />
              <groupfilter function='member' level='[none:day:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:day:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:Number of Records:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:Number of Records:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:day:nk]' value='#ffffff' />
            <format attr='color' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:Number of Records:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#666666' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#666666' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:day:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#000000'>On &lt;</run>
                <run bold='true' fontcolor='#000000'>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:day:nk]</run>
                <run bold='true' fontcolor='#000000'>&gt;s, I have filled up my car &lt;</run>
                <run bold='true' fontcolor='#000000'>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:Number of Records:qk]</run>
                <run bold='true' fontcolor='#000000'>&gt; times</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:Number of Records:qk]</rows>
        <cols>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:day:nk]</cols>
      </table>
      <simple-id uuid='{D094D655-4858-481D-B0EF-7BF98A9BF2E5}' />
    </worksheet>
    <worksheet name='Number of Fillups by Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='car_mpg_data' name='federated.0h16xhh1qi7ciy1aaiifi0x01gz8' />
          </datasources>
          <datasource-dependencies datasource='federated.0h16xhh1qi7ciy1aaiifi0x01gz8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Quarter' name='[qr:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[Exclusions (MONTH(Date),QUARTER(Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[mn:date:ok]' />
                <groupfilter function='level-members' level='[qr:date:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[mn:date:ok]' member='%null%' />
                <groupfilter function='member' level='[qr:date:ok]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[Exclusions (MONTH(Date),QUARTER(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:Number of Records:qk]</rows>
        <cols>([federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[qr:date:ok] / [federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:ok])</cols>
      </table>
      <simple-id uuid='{A7143675-37DE-49A7-A932-95F3B783A993}' />
    </worksheet>
    <worksheet name='Sums'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='car_mpg_data' name='federated.0h16xhh1qi7ciy1aaiifi0x01gz8' />
          </datasources>
          <datasource-dependencies datasource='federated.0h16xhh1qi7ciy1aaiifi0x01gz8'>
            <column caption='Dollars' datatype='real' name='[dollars]' role='measure' type='quantitative' />
            <column caption='Gallons' datatype='real' name='[gallons]' role='measure' type='quantitative' />
            <column-instance column='[dollars]' derivation='Sum' name='[sum:dollars:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gallons]' derivation='Sum' name='[sum:gallons:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:dollars:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:gallons:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:dollars:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{605E54EB-DF36-4A83-9C4D-FB6491AFD894}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#666666' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_13' value='left' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='36625' id='21' name='Gas Cost by Month' w='31700' x='67100' y='61625'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='5500' id='13' type='text' w='98400' x='900' y='1125'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='26'>Analysis of my gas tank</run>
          </formatted-text>
        </zone>
        <zone h='44625' id='22' name='MPG Moving Average' w='97300' x='1100' y='6875' />
        <zone h='23750' id='24' name='Cost of Fillups by Month' w='65800' x='1100' y='52375' />
        <zone h='23000' id='26' name='Number of Fillups by Day' w='65800' x='1200' y='76125'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{3EED3199-4694-4EA0-BBCC-202FA34AC4E0}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Number of Fillups by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[qr:date:ok]</field>
                    <field>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:Number of Records:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:ok]</field>
                  <field>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[qr:date:ok]</field>
                  <field>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:Number of Records:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>%null%</value>
                <value>%null%</value>
                <value>228</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{2B3B46CD-C584-47FF-BBF4-651BBBAE9BB4}' />
    </window>
    <window class='worksheet' name='Cost of Fillups by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[mn:date:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{C2AEFC43-2A19-4982-8C10-4032920D1A60}' />
    </window>
    <window class='worksheet' name='Miles vs. Gallons'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4ECEADD7-84E8-478A-B1AF-6E7039D5252D}' />
    </window>
    <window class='worksheet' name='Number of Fillups by Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:day:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:day:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:Number of Records:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:day:nk]</field>
                  <field>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:Number of Records:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>%null%</value>
                <value>228</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{B5E217AC-A1FC-43F7-82A4-13B8949679A2}' />
    </window>
    <window class='worksheet' name='Gas Cost by Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:day:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[none:day:nk]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{07C5E924-B963-41BC-9042-68A2590F2BDA}' />
    </window>
    <window class='worksheet' name='Gas Cost by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0C7534A9-CEA4-45C0-BC88-E9E4A60341AD}' />
    </window>
    <window class='worksheet' name='MPG Moving Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{953EA2FC-71B0-4190-8A5A-3B96EFFF064C}' />
    </window>
    <window class='worksheet' name='High/Low temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[yr:date:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{975F0D82-C578-4A61-A4E6-7C1E5EB6AAC6}' />
    </window>
    <window class='worksheet' name='Sums'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[:Measure Names]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;[federated.0h16xhh1qi7ciy1aaiifi0x01gz8].[sum:dollars:qk]&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{DE3179AB-0331-44F5-8B68-439D6C260722}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Cost of Fillups by Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Gas Cost by Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MPG Moving Average' />
        <viewpoint name='Number of Fillups by Day'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{BA556D82-1B87-45A7-9E40-8A1BD7A471B4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Cost of Fillups by Month' width='384'>
      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
      1+tVZ2enPvvsMyUSCT322GMqKCjQ+fPn1djYqDlz5mjLli3y+/3J9SQSCR0+fFhdXV1asWKF
      qqqqJElNTU1qa2tTSUmJ1q9fL4+HExQAmCoTOsJ++umnikajKioqUlpamqLRqIaGhvThhx9q
      27Ztevrpp5WVlaWRkRHt27dPTz75pObMmaP6+vqU9bS2turmzZv66U9/qqNHj+ratWvq7u7W
      yZMn9eyzz+rKlSs6e/bspO4oACDVhM8AgsGgMjMztXr1aknSsWPHtGrVKsViMXm9XmVnZ+v0
      6dMqLy9Xdna2qqur9cYbb6Ss59y5c3r88ccVCAS0du1anT17VtFoVOvXr1d6ero2btyoxsZG
      lZWVybZt2badfGwikZiE3XbPN/fFle07tuLx+F2XG88yU8lx3B/DVHBsx9XtJ+zxff/vB/FE
      XNY4xjqz5tTlsSbiKWOdUAA2bdqkgwcPqrGxUZL0gx/8QH19fTpz5oyuXLminp4eVVdXy+Px
      KDs7+9YGfD45TupOh8NhZWRkSJKysrLU09OjWCyWvC0jI0PhcDi5/Lcf7/ZB9J/x7X2Z/u2P
      b/7cHqc0s7/PY3FcPgA4jjNj5tVxHDnjea66PKeayJy6PtTUsU4oAGlpadq2bZts25bX69WX
      X36pzMxM1dbWqrKyUsPDw9qzZ4/WrVun3t5eSbdesX/7Wn4gENDw8LACgYCGhoYUDAbl9Xo1
      PDwsScn7JMnj8aQ8Ph6Py+eb0LDvK16v193tezxKS0u763J+23/XZaaSZWlc45xp3H5fy+f1
      jnteo1M8lrvx+/yyxjFWt+fUO4E5lWVN7WDuwufzp4x1QjPX3Nysjo4OJRIJOY4jn8+n0tJS
      HT16VENDQ7p+/boyMzNVVFSk06dPKxQKqbW1VfPmzZMkdXR0KB6Pa/HixTp27JhGRkZ07Ngx
      lZaWJtcTDof1xRdfqLS0dHL3HACQYkIBKCwsVGtrq06fPq3MzEytXLlS+fn5Wr16terq6tTY
      2KitW7cqIyNDjzzyiN599111dXWptrZWktTW1qZYLKaqqio5jqO9e/eqrKxMc+fO1YIFC1Rc
      XKy9e/cqGAyqrKxsSnYYAHDLhK6l5Ofna/v27crIyND69euTt1dVVSU/ynlbRUWFKioqUm57
      4oknkn/ftm1byn2WZWnDhg3asGHDRIYEALhH93Tx7NFHH53scQAAptk9BcDtNzIBAP88/qkt
      ABiKAACAoQgAABhq5v6LKuA/OOErckLn3BtAep48s/jYMmYeAoAZz+49qPiX/9m17XsKn5Jn
      zf92bfvAveISEAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEI
      AAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEI
      AAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKF8bg9gMoQTts4ODLu2/TSPR2Wz
      M1zbPgDciwciABdDYW1//7hr2y/OSlfDM99zbfsAcC+4BAQAhiIAAGAoAgAAhiIAAGAoAgAA
      hppwABzHUUtLixzHGXV7LBZL3u44jqLRqBKJxB3XY9u2IpFIynpu32bb9kSHBQCYoAl9DHRw
      cFB1dXXq7OzUiRMn9Oyzzyo9PV2S1Nraqr///e/6wx/+IMdxdODAAXV2diqRSGjnzp2aPXt2
      cj3hcFh79uyRZVnKzs7Wjh075DiO6urqNDIyIsuytGvXLqWlpU3u3gIAkiZ0BnDo0CHV1tZq
      7dq1euqpp+Tx3Hp4KBRSU1OTcnJyJEl9fX26fPmyfvGLX2jr1q3av39/ynoaGxtVWVmpF154
      QZLU0dGhc+fOKTMzUy+88IJKS0vV1NQ0GfsHABjDhM4ACgsL1dDQoPT0dGVmZsrj8chxHH30
      0Ud6/PHHtW/fPklSd3e3SktL5fF4NG/ePA0Pp/4r3StXrmj16tWSpIqKCnV2dioWi6m8vFyS
      tGzZMtXX10uSEolEymWkRCKheDyesr5oNDrB3Z5cjuMoHA6Pa9lvj326xROJcY01EolMw2jG
      NpE5VSwma2qH850SdkKJcY7VTrh7eTMWj497Xq3/+OOWSDQihe/+GnWsy8zTZSJz+u1L59Mt
      Go0qHPYmv55QAKqrq5WTk6O3335bL730kp599ll1dXUpIyNDhYWFchxHtm0rFoslL99YljXq
      mn48HpfPd2vTfr9f8Xh81G2xWEyS5PF4ZFlfPw0ty5LX601Zn9/v7kFVssZ9uerbY59uXo9n
      XGP12/5pGM13Gf+c2j6f3DwEeDwe+cY5Vo/HzUOq5PN6xz2vbv9U+f1+WeMYq8fj7s/URObU
      cvfbL7/flzLWCf9XEIsXL1Z1dbXy8vLU3Nysq1evanh4WHv27FF7e7vq6upUXV2t8+fPS7pV
      nNuXim7LzMxUf3+/gsGgrl+/rlmzZikSiaivr08LFixQX1+fsrKyJN064H8zALZtj1qfZbn7
      YSbL0qgxjb2su88Ay7LGNdbx7s9UmcicOm7PqcY3p7cWnhnf//uBx/LIGsdY3T6oTmxO3f7+
      e1LGOqEA1NfXKxaLqbu7W5cuXdKmTZv06KOPJu//05/+pGeeeUaJREL/+Mc/dPbsWZ08eVIV
      FRWSbr2HUFNTo6qqKn300Ueqra1VY2OjfvGLXygej+v1119Xdna29u3bpx/+8IeTtMsAgDuZ
      UABqa2vV3t6u7u5u/fjHP1ZeXl7K/Y899titlfp8eu6553Ts2DGVlpaqsrJSkjR37lx5vV6V
      lJTItm2dPXtWzz77rLKzsyVJTz/9tFpbW7V582YVFhZOxv4BAMYwoQB4PB4tWbJEoVBo1MFf
      unV56LacnBz94Ac/SLm/rKws+ffS0lKVlpam3F9QUKCCgoKJDAkAcI/u6WJgdXX1ZI8DADDN
      Zsa7QQCASUcAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUA
      AMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUA
      AMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUA
      AMBQBAAADEUAAMBQBAAADEUAAMBQBAAADHVPAYhGo5M9DgDANJtQABzH0cjIiPbt26dwOCzH
      ceQ4joaHh3Xu3Dl1d3fLcRxJUiQS0ZkzZ9Tb25u87Zvr6e/v16lTpzQ8PJy8fWhoSKdOndLg
      4OCoxwAAJteEAnD+/Hm9/PLLOnPmjF577TUNDw+rq6tLr776qi5duqT9+/fryJEjchxHr776
      qrq7u/X+++/r3LlzKevp7e3Va6+9pv7+fr300ksKh8MaGhrSSy+9pP7+fr3yyivq6+ub1B0F
      AKTyTWThkydPaseOHTp16pQ2b94sSfJ6vfr1r38tr9erGzdu6KOPPlJhYaHy8/NVW1ur1atX
      691339WyZcuS6/niiy+0fft2FRcXy3EcnT59WpFIRGvXrtX3v/995efn6+jRo9q2bdvk7i0A
      IGlCAVizZo3ee+89JRIJVVVVae7cuQoEApKk7u5u/fWvf9X27dt17do1zZ8/X5ZlKRgMyrbt
      lPWEQiHl5eVJkgoKCtTe3q5YLKbly5dLkubOnavm5mZJUjweVzweTz7Wtu1R70FEwuEJ7vbk
      sm0n5VLWd4nFYlM8mu8Wj8fHNdaRyMg0jGZsty8tjocVjbr6aYZEIqHYOMeaSCSmeDTfLRqN
      yhrnWL2OI2uKx/NdwuEROeM4QsXjLs9pLDbu56rbl7Yj4bCGh7/+rk4oAIWFhXrxxRe1Z88e
      vfvuu9q2bZuKior05Zdfqrm5WT/5yU+Un5+vGzdujDrof5PH40lOhG3b8ng8siwr5TbLujVI
      n88nn+/rYcbj8ZSvJSnd5fekPR5LGRkZ41rW7/dP8Wi+m8/nG9dYE57xPaGnimWNf04TaWmK
      332xKeP1ehUY51iHvd4pHs13S0tLG/e8Ri03D/9SIBCUNY6x+nwuz6nfP+45tV5WYPIAAAHH
      SURBVFye0/RAIGWsE3rhNDg4KJ/Pp/nz52vjxo26ePGient71dTUpOeee075+fmSpPz8fHV0
      dMhxHA0MDCg9PV3SrYO34zjKzc3VpUuXJEnt7e2aN2+e5s6dq4sXL0qSOjs7k2cIAICpMaEz
      gLa2Np04cUK9vb0qKCjQM888o5aWFvX19WnPnj2SpMWLF2vjxo2ybVuvvfaabty4oWeeeUaS
      9PLLL2vXrl2qqanRK6+8ouPHjysUCqm2tla2bevPf/6zent71dPTo1/96leTv7cAgKQJBaCm
      pkY1NTXav3+/Nm/eLMuy9Oijj+rRRx8dteyuXbsUCoUUDAaTl2xefPHF5P2///3vFQqFlJOT
      kzwt+u1vf6vBwUHNmjXL9VMlAHjQTSgAtw/Ky5cvT/79uw7Us2bNuuPjpVvXTWfPnp1yv8fj
      GXUbAGBq3NOHJwoKCiZ7HACAacb/BQQAhiIAAGAoAgAAhiIAAGAoAgAAhiIAAGAoAgAAhiIA
      AGAoAgAAhiIAAGAoAgAAhiIAAGAoAgAAhiIAAGAoAgAAhiIAAGAoAgAAhiIAAGAoAgAAhiIA
      AGAoAgAAhiIAAGAoAgAAhiIAAGCo/w9KcA6c8qJmVQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Dashboard' width='384'>
      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
      Duall16itraWn//858pzf+6550hISMDJyYm+vj727dtHSkoK2dnZA5q40tLSKCsro66ubsh7
      PfbYY1gsFl5++eUBo6Jee+21AefV1dXxwgsvDOikDQkJ4Uc/+hFZWVlKxpmZmUlVVRUvv/yy
      UjpXq9UEBgYOef/XX3+d2NhY/u3f/o1t27YN2Qfwq1/9akDanJyceOmll8jOzmbLli0Dzi0q
      KuKDDz6gtbUVgHvuuYfc3FxCQ0OVY1dzdXXl2WefpbW1lbfffltJ81gjawDSqEpJSaGnp0ep
      DlssFgoKCpg8eTLe3t6Dzq+trR1QyrRmFFePdqmpqVEyf71ej7u7O1VVVQA3LKEB7Nu3D51O
      x8yZM5VjGRkZtLS0UFhYCKBkjmlpabi6uirnVVVV3fCD3d3drTznq0uedXV1GI3GIR+TkpJC
      S0vLgKalvr4+tm/fjl6vJyEh4YbP50YuXbqk/GzNtBobG5Xnd/Vxa03i7NmzNDQ0MHv2bKW2
      Ex0djY+PjxIgrxUSEkJQUBBffvnlTYfEtre3K6+pVqvFzc2NtrY2urq6Brx23d3d+Pj4MG3a
      NCVtZrP5lgLf9VjTplarcXV1xcnJicrKyiHfM2VlZQMy+qHeh1YqlYqnn34aT09PXnvttQH/
      37FG1gCkUaPT6UhISKCurk5pkwWRwapUKmbMmMHevXuHfV1PT09Wr17NjBkzlGq/1VBNIlc7
      duwY999/P3PnzmXPnj14eHgQGxvLjh07lMw9Ly+PuXPnkpOTw6JFi7h48SKnT59m7969tLe3
      X/fa+fn5FBYWMm/ePLKzs6moqFAeN1SpEcDf35+KiopBgaW6ulr5+2iyWCzs27ePNWvWkJSU
      xKlTp0hPT8doNCq1iWv5+voCDNk2fy21Ws2yZcvIyspi0qRJA16vq3/etGkT3/rWt3juuefo
      7OykqKiIY8eO3bQN/kZSUlJYvnw5ERERaLX9WaHJZLrta0ZHR/Pqq6+i0+l45513lILIWCUD
      gDRqEhIS0Ov1REREsH79+kF/v90A8Nxzz+Ht7c3HH39MSUkJvb29hIeHD3mPaxkMBg4dOsSS
      JUuIiIggMjIStVo9oHTb19fHr3/9a2JjY5k+fTrTpk0jNzeXBQsW8Itf/IKWlpYhr200Gnnl
      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
      /wG64qjvgNn+UQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Gas Cost by Day' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Gas Cost by Month' width='384'>
      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
      gg==
    </thumbnail>
    <thumbnail height='208' name='High/Low temp' width='384'>
      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
      NXVohsegDHbbW2A+AK2trfr2229VUlIin8/X7/X++usvtbS0KC0tTQsWLOj1funp6aEYEwOw
      fft2rVu3TufOndM111yjmTNnKiMjQyNHjlRFRYV++uknVVdX68MPP9Tzzz+vqKiuR0Q3bdqk
      zz//XC6XSw888IBmzJih+Ph4nTp1SkeOHFFJSYnOnTsXoUeHvgx221thOgCNjY165ZVX1N7e
      rri4OC1atEhOp1PFxcVyOBx9rltXVydJysjI0Jw5c8IxLi5SdXW1XC6XHnroId10001dlk2a
      NEkFBQVavXq1fv31V9XU1GjKlCnB5S0tLfrqq68UFxenZ555psu7/ISEBOXn5ys/Pz9sjwUX
      ZzDb3hLTATh79qyioqJUWFiogoICuVwubd++vV/r/vnnn5Kk5OTkoRwRg5CVlaU777yz1118
      p9OpnJwc/frrr/J6vV1eBH744Qd1dnbqwQcf5BDPJWgw294S0wFITEzUa6+9ptjY2Ite9/we
      wMSJE0M9FkIkOzv7gvf566+/JEmjRo0K3tbZ2Sm32624uDjl5uYO2XwYOgPd9tbYPPD1P9HR
      0QN68ZfYA7gctLS0aMuWLXI6nZo6dWrw9pMnT6qjo0PZ2dkaMcL0e6TLVm/b3hp+uwfo/B5A
      fX296uvrFRUVpZiYGCUlJcnpdEZ4OlxIXV2d3n33XbW2tuq2225TfHx8cNnJkycl/R13v9+v
      mpoa/fHHHzpx4oSio6M1adIkZWVlKS4uLlLjYxD62vbWEIABqq+vlyS9+eabXW53Op1KTU3V
      woULlZ2dfcGTyQi/Xbt2qbi4WB0dHcrPz9c999zTZfn5AOzatUsbN27s8VLfmJgYLV26VPPm
      zQvLzAiNC217awjAAD366KM6depU8M/t7e06ffq0qqur9dtvv2nNmjUqLy/XE088EcEp8W9t
      bW365JNP5PF45HQ6tXz5chUUFHS7X1NTk6S/ryRJTU3VvHnzlJqaqgkTJqi5uVn79u3Ttm3b
      tG7dOsXFxenGG28M90PBRervtreGAAxQXyeZjh49qg8++EB79+5VRkaG5s+fH77B0COv16ui
      oiI1NTVpwoQJevzxx3s99nv+pODDDz+sm2++ucuySZMmacaMGbr66qv1n//8R8XFxbrhhhvY
      0xvGLmbbW2P6JPBQyczM1FNPPSVJKisri/A0KCsr0xtvvKGmpibNmTNHL730Up8vAAkJCZL+
      /hqB3mRnZysrK0stLS1qbGwM9cgIkYvd9tYQgCGSmZmpmJgYeb3eSI9iWnV1tdasWaOzZ89q
      4cKFWrlypUaOHNnnOomJiZL+OdHfm8mTJ0v654owDC8D2fbWEIAhFAgE+IWLIJ/Ppw8++ECd
      nZ1avHixli1b1q/1xo8fL4fDodLS0j6/6uH8V4eMGTMmJPMidAa67a0hAANQV1d3wW8Brays
      VHt7u9lPGA4HHo9Hp06d0syZM7VkyZJ+rzdq1Cjl5OSoublZHo+nx/sEAgEdPXpUUVFRfBZk
      GBrotreGAAxAaWmpXnrpJbnd7uA3Q/5bbW2t1q5dK6l/n0jE0Ni7d68kDei7mhYvXiyHw6H1
      69frl19+6bb8hx9+0O+//65Zs2YpOjp60LMitAaz7S0xfRXQ5s2bux2/Pf/nH3/8UZWVlcHb
      Y2JidO+990r6++sfOjo69Mknn2jDhg2aOnWqJk+eLJfLpZqaGv300086d+6cZs+erZycnPA9
      IHTR0NAgSdqxY0fwBaE3s2fP7nI5Z1JSku666y59/fXXevvtt5WXl6f09HT5/X6VlZWpvLxc
      sbGxeuCBB4b0MWBgBrPtLTEdgIqKCh0+fLjHZVVVVaqqqgr+eezYscEAZGdnKyMjQxs3btT+
      /ft14MABHThwIHjf0aNHq7CwsNslhAiv1tZWSep1G//bxIkTu70I3HHHHUpJSdHatWvldrvl
      druDy6ZPn66VK1dy/H+YGuy2t8IR6Otat37weDzmD3O0traqtrZWHR0dSk5OVmJiIteFX0b8
      fr9qa2v122+/yeVyKS0tLXii+FJ2/vyG9eevZab3AEIlLi6O74W5jEVFRSklJUUpKSmRHgUI
      KU4CA4BRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwKiSfBAYAXHpC8klgPkoOXHr4
      KghwCAgAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAA
      GEUAAMAoAgAARhEAADAqJP8fgCXNn32u5s8+j/QYGEIJT6/SqHlzIz0GhgDP367YA7gI/PLY
      0Ph/7+tMiTvSYyDEeP52RwD6iV8eW4jA5YXnb88IQD/5GhoiPQLCjG1++WBb9owA9BPHhW0Z
      s+xejVl2b6THQIjw/O0ZAbgI/BLZwIv/5Ynnb3eOQCAQGMwP8Hg8ys7ODtU8AMLE4/FIEs9f
      w9gDAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABg1H8BvNcQwd04jmQAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='384' name='MPG Moving Average' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Miles vs. Gallons' width='384'>
      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
      GABERIr6/3rlrST4cQazAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Number of Fillups by Day' width='384'>
      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
      SQkAQFICAJCUAAAkJQAASQkAQFICAJCUAAAkJQAASQkAQFICAJCUAAAkJQAASQkAQFICAJCU
      AAAkJQAASQkAQFICAJCUAAAkJQAASQkAQFICAJCUAAAkJQAASQkAQFICAJCUAAAkJQAASQkA
      QFICAJCUAAAkJQAASQkAQFICAJCUAAAkJQAASbWUcdLNmzfHqlWrIiKiXq/H4cOHY3R0tIyt
      AFigUq4Adu/eHZcuXYqxsbEYGxuLK1eulLENAA0o/AqgUqlEa2trvP3220WfGoACFR6Anp6e
      6OjoiAcffDAuXrwYQ0NDV7/9s3z58tizZ8+c9XfccUfRYwBfMC1vTUW8c3mxx5jje997KqJy
      7evfG74cz795sbyBFuhLX/pSPLpjx9XHg4ODxQfg4sWL8etf/zpaWlripptuiieffDKeeeaZ
      OH36dIyPj8ezzz47a/19990Xb775ZtFjAF8wOy5vim1x22KPMcdzP/tZ1OcRgGrT6ojWbeUN
      tEAnTpyIn33w7qxjhQdgZmYm3n33802q1Wps3bo1Tp8+HbVaLcbGxmatn5ycnHMMyOdy5fKS
      /LnEsfGxqM9j/VT7jRE9pY2zYNPT0zFWnf25tvAP96pVq6Kvr+/q476+vhgfHy96GwAaVPgV
      QK1Wi0cffTTa2toiImJkZCR++9vfFr0NAA0qPADnz5+PH/3oR9He3h6VSiWmpqaK3gKAApTy
      i2AREZcvL727+QB8bgnecgHgehAAgKQEACApAQBISgAAkhIAgKQEACApAQBISgAAkhIAgKQE
      ACApAQBISgAAkhIAgKQEACApAQBISgAAkhIAgKQEACApAQBISgAAkhIAgKQEACApAQBISgAA
      khIAgKQEACApAQBISgAAkhIAgKQEACApAQBISgAAkhIAgKQEACApAQBISgAAkhIAgKQEACAp
      AQBISgAAkhIAgKQEACApAQBISgAAkhIAgKQEACApAQBISgAAkhIAgKRKDcDWrVvjzjvvLHML
      ABaopawT9/f3x+7du2NiYiIOHz5c1jYALFApVwAtLS3x8MMPx+9+97uo1WplbAFAg0q5Anjg
      gQfi5MmTcfr06VnHly9fHt/5znfmHNuyZUsZYywZH1w8H8NT44s9xixNUYmvrdwwr+dMT5+J
      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
    </thumbnail>
    <thumbnail height='384' name='Number of Fillups by Month' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='88' name='Sums' width='288'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
